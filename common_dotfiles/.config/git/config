[core]
    autocrlf = input
    excludesfile = ~/.config/git/gitignore_global
    quotepath = false
    eol = lf
    editor = vim
    pager = less
    trustctime = false  ; https://stackoverflow.com/a/5255710/3744499
[include]
    path = ~/.config/gitconfig.local
    path = ~/.config/git/conventional-commit.gitconfig
[init]
    defaultBranch = main
[push]
    default = simple
[pull]
    ff = only
    ; rebase = true
[merge]
    ff = no
[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    required = true
    process = git-lfs filter-process
[alias]
	alias = config --get-regexp ^alias\\.
    aa = add --all
    ac = !"git add -A && git commit -m"
    amend = commit --amend --no-edit
    br = branch -vv
    changed = !"git --no-pager show --diff-merges=m --name-status --oneline"
    clone-github = !"f() { git clone \"git@github.com:$1.git\"; }; f"
    cm = commit -m
    df = !"f() { [ -z \"$GIT_PREFIX\" ] || cd \"$GIT_PREFIX\"; command -v diff-so-fancy >/dev/null && git diff --color \"$@\" | diff-so-fancy  | less --tabs=4 -RFX || git diff --color \"$@\" | less --tabs=4 -RFX; }; f"
    dfc = !"git df --cached"
    dfs = !"git df --name-status --find-renames"
    fetchthis = !"bname=$(git rev-parse --abbrev-ref HEAD); git fetch origin $bname"
    find-merge = !"bash -c 'commit=$1 && branch=${2:-HEAD} && { git rev-list $commit..$branch --ancestry-path | cat -n; git rev-list $commit..$branch --first-parent | cat -n ;} | sort -k2 -s | uniq -f1 -d | sort -n | tail -1 | cut -f2' _"
    iac = !"giac() { git init -b main && git add . && git commit -m 'Initial commit' ;}; giac"
    ignore = !"gi() { curl -L -s https://www.gitignore.io/api/$@ ;}; gi $@"
    ignored = !"git status --ignored | awk -v RS='' '/Ignored files:/'"
    ignored2 = !"git check-ignore **/*"
    key = rev-parse --short HEAD
    lg = log --graph --abbrev-commit --decorate --date=format:'%Y-%m-%d %H:%M:%S' --pretty=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)(%ad)%C(reset) %C(white)%s%C(reset) %C(dim white)- <%an>%C(reset)%C(bold yellow)%d%C(reset)'
    lg-all = lg --all
    lg-file = lg2 --name-status --find-renames
    lg-head = lg-parent
    lg-parent = lg --first-parent
    lg-stat = lg2 --stat --find-renames
    lg1 = lg
    lg2 = log --graph --abbrev-commit --decorate --date=format:'%Y-%m-%d %H:%M:%S' --pretty=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%ad%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'
    ls = ls-tree --name-only -r HEAD
    no-unchange = update-index --no-assume-unchanged
    patch = !"git --no-pager diff --no-color"
    pr  = !"bash -c 'git fetch -fu ${2:-$(git remote | grep ^upstream || echo origin)} refs/pull/$1/head:pr/$1 && git checkout pr/$1' _"
    pr-bitbucket  = !"bash -c 'git fetch -fu ${2:-$(git remote | grep ^upstream || echo origin)} refs/pull-requests/$1/from:pr/$1 && git checkout pr/$1' _"
    pr-clean = !"git for-each-ref refs/heads/pr/* --format='%(refname)' | while read ref ; do branch=${ref#refs/heads/} ; git branch -D $branch ; done"
    prune-local= !"git remote update --prune && git branch -vv | awk '/: gone]/{print $1}' | xargs --no-run-if-empty -n1 sh -c 'for arg do git branch -d \"$arg\" && echo \"branch: $arg - deleted.\"; done' _"
    pullthis = !"git fetchthis && git merge --ff-only FETCH_HEAD || echo '=> Use `git pull --rebase` then resolve the conflict'"
    show-file = show --name-status --find-renames
    show-merge = !"f() { merge=$(git find-merge $1 $2) && [ -n \"$merge\" ] && git show $merge; }; f"
    show-revision = !"f() { git show $1:\"${@:2}\" ;}; f"
    skip = update-index --skip-worktree
    st = status -s --ignore-submodules=dirty
    sw = switch
    unchange = update-index --assume-unchanged  # Difference Between 'assume-unchanged' and 'skip-worktree'. < https://stackoverflow.com/a/13631525/3744499 >
    unchanged = !"git ls-files -v | grep '^[[:lower:]]' || echo '(No unchenged files found)'"
    unskip = update-index --no-skip-worktree
    unstage = reset HEAD --
    wip = !"git add -A; git commit -m \"WIP: $(date)\""
[color]
    ui = true
[color "diff"]
    meta = 11
    frag = cyan reverse
    old = red bold
    new = green bold
    commit = yellow bold
    whitespace = red reverse
[color "diff-highlight"]
    oldNormal = red bold
    oldHighlight = red bold 52
    newNormal = green bold
    newHighlight = green bold 22
[color "branch"]
    current = yellow reverse
    local = yellow
[color "status"]
    added = yellow bold
    changed = red
    untracked = cyan
[status]
    submodulesummary = 1
[difftool "sourcetree"]
    cmd = opendiff \"$LOCAL\" \"$REMOTE\"
    path =
[mergetool "sourcetree"]
    cmd = /Applications/Sourcetree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
    trustExitCode = true
[diff-so-fancy]
    stripLeadingSymbols = false
    changeHunkIndicators = true
[credential]
    helper = cache --timeout 7200
[pager]
    branch = false
