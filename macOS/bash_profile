# .bash_profile

# [How to check if a program exists from a Bash script?](https://stackoverflow.com/a/677212/3744499)

# enables color in the terminal bash shell
export CLICOLOR=1
# sets up the color scheme for list
export LSCOLORS=Exgxcxdxbxegedabagacad
# enables color for iTerm
export TERM=xterm-256color

# The various escape codes that we can use to color our prompt.
#   Based on work by woods
#
#   https://gist.github.com/woods/31967

        RED="\[\033[0;31m\]"
     YELLOW="\[\033[0;33m\]"
      GREEN="\[\033[0;32m\]"
       BLUE="\[\033[0;34m\]"
  LIGHT_RED="\[\033[1;31m\]"
LIGHT_GREEN="\[\033[1;32m\]"
      WHITE="\[\033[1;37m\]"
 LIGHT_GRAY="\[\033[0;37m\]"
 COLOR_NONE="\[\e[0m\]"

#PS1='\[\e[0;33m\]\u\[\e[0m\]@\[\e[0;32m\]\h\[\e[0m\]:\[\e[0;34m\]\w\[\e[0m\]\$ '

# Load the shell dotfiles, and then some:
# * ~/.path can be used to extend `$PATH`.
# * ~/.extra can be used for other settings you don’t want to commit.
for file in ~/.{bash_aliases,path,bash_prompt,exports,aliases,functions,extra}; do
	[ -r "$file" ] && [ -f "$file" ] && source "$file";
done;

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

# if [ -f ~/.bash_aliases ]; then
#  . ~/.bash_aliases
# fi

# Detect which `ls` flavor is in use
if ls --color > /dev/null 2>&1; then # GNU `ls`
	colorflag="--color"
	export LS_COLORS='no=00:fi=00:di=01;31:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:'
else # macOS `ls`
	colorflag="-G"
	#export LSCOLORS='BxBxhxDxfxhxhxhxhxcxcx'
fi

# Always use color output for `ls`
if command -v gls >/dev/null 2>&1; then
  alias ls="/usr/local/bin/gls ${colorflag} --group-directories-first"
else
  alias ls="command ls ${colorflag}"
fi

# sets up proper alias commands when called
alias ll="ls -lhaFH"
alias la="ls -A"
alias vi="vim"
alias l="ls -CF"

# Shortcuts
alias d="cd ~/Documents/Dropbox"
alias dl="cd ~/Downloads"
alias dt="cd ~/Desktop"

# Easier navigation: .., ..., ...., ....., ~ and -
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."

# Use pipenv for subl
(command -v pipenv >/dev/null) && (command -v subl >/dev/null) && alias pipenv-subl="pipenv run subl"

alias sourcetree="open -a SourceTree"
alias pdocker="docker ps | peco | awk '{print \$1;}' | tr '\n' ' ' | xargs docker"

# Always enable colored `grep` output
# Note: `GREP_OPTIONS="--color=auto"` is deprecated, hence the alias usage.
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# Enable aliases to be sudo’ed
alias sudo='sudo '

# Print each PATH entry on a separate line
alias path='echo -e ${PATH//:/\\n}'

# Kill all the tabs in Chrome to free up memory
# [C] explained: http://www.commandlinefu.com/commands/view/402/exclude-grep-from-your-grepped-output-of-ps-alias-included-in-description
alias chromekill="ps ux | grep '[C]hrome Helper --type=renderer' | grep -v extension-process | tr -s ' ' | cut -d ' ' -f2 | xargs kill"

# IP addresses
alias ip="dig +short myip.opendns.com @resolver1.opendns.com"
#alias localip="ipconfig getifaddr en0"
alias ips="ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"\"); print }'"

# custom functions
function mkcd {
  last=$(eval "echo \$$#")
  if [ -z "$last" ]; then
    echo "Enter a directory name"
  elif [ -d "$last" ]; then
    echo "\"$last\" already exists"
  else
    mkdir "$@" && cd "$last" || exit
  fi
}

# gitignore api
function gi() { curl -L -s https://www.gitignore.io/api/$@ ;}

# bash-git-prompt
# https://github.com/magicmonty/bash-git-prompt#via-homebrew-on-mac-os-x
if command -v brew >/dev/null 2>&1 && [ -f "$(brew --prefix)/opt/bash-git-prompt/share/gitprompt.sh" ]; then
  __GIT_PROMPT_DIR=$(brew --prefix)/opt/bash-git-prompt/share
  source "$(brew --prefix)/opt/bash-git-prompt/share/gitprompt.sh"
  GIT_PROMPT_ONLY_IN_REPO=0
  GIT_PROMPT_THEME=Custom
  #GIT_PROMPT_START='\[\e]0;\u@\h:\w\a\]\[\e[01;32m\]\u@\h\[\e[00m\]:\[\e[01;34m\]\w\[\e[0m\]'
fi

# https://github.com/scop/bash-completion
if command -v brew >/dev/null 2>&1 && [ -r "$(brew --prefix)/etc/profile.d/bash_completion.sh" ]; then
	# bash-completion@2
	# Ensure existing Homebrew v1 completions continue to work
	export BASH_COMPLETION_COMPAT_DIR="$(brew --prefix)/etc/bash_completion.d";
	source "$(brew --prefix)/etc/profile.d/bash_completion.sh";
elif [ -f $(brew --prefix)/etc/bash_completion ]; then
	# Bash Completion v1 (Deprecated)
	source $(brew --prefix)/etc/bash_completion;
elif [ -f /etc/bash_completion ]; then
	source /etc/bash_completion
fi;

# The fuck
command -v thefuck >/dev/null 2>&1 && eval "$(thefuck --alias)"

# pyenv
command -v pyenv 1>/dev/null 2>&1 && eval "$(pyenv init -)"

# pyenv-virtualenv
command -v pyenv-virtualenv-init >/dev/null 2>&1 && eval "$(pyenv virtualenv-init -)"

# Fix pyenv bug for git
# https://github.com/pyenv/pyenv/issues/688#issuecomment-316237422
export GIT_INTERNAL_GETTEXT_TEST_FALLBACKS=1

# env for pipenv
export PIPENV_IGNORE_VIRTUALENVS=1

# Set locale to fix ssh forwarding problem
# https://askubuntu.com/a/144448
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8
